"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9689],{8160:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var a=i(5893),n=i(1151);const s={sidebar_position:4},r="Applications",o={id:"Applications",title:"Applications",description:"Here are the applications in the SAGE3 system.",source:"@site/docs/Applications.md",sourceDirName:".",slug:"/Applications",permalink:"/docs/Applications",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Applications.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Quick Start Guide",permalink:"/docs/Quick-Start-Guide"},next:{title:"Shortcuts",permalink:"/docs/Shortcuts"}},l={},c=[{value:"AIPane",id:"aipane",level:2},{value:"CSVViewer",id:"csvviewer",level:2},{value:"ChartGenerator",id:"chartgenerator",level:2},{value:"ChartMaker",id:"chartmaker",level:2},{value:"Clock",id:"clock",level:2},{value:"Cobrowse",id:"cobrowse",level:2},{value:"Counter",id:"counter",level:2},{value:"DataTable",id:"datatable",level:2},{value:"DeepZoomImage",id:"deepzoomimage",level:2},{value:"GLTFViewer",id:"gltfviewer",level:2},{value:"HCDP",id:"hcdp",level:2},{value:"ImageViewer",id:"imageviewer",level:2},{value:"JupyterLab",id:"jupyterlab",level:2},{value:"KernelDashboard",id:"kerneldashboard",level:2},{value:"LeafLet",id:"leaflet",level:2},{value:"Notepad",id:"notepad",level:2},{value:"PDFResult",id:"pdfresult",level:2},{value:"PDFViewer",id:"pdfviewer",level:2},{value:"PluginApp",id:"pluginapp",level:2},{value:"SageCell",id:"sagecell",level:2},{value:"Screenshare",id:"screenshare",level:2},{value:"Seer",id:"seer",level:2},{value:"SensorOverview",id:"sensoroverview",level:2},{value:"Stickie",id:"stickie",level:2},{value:"VegaLite",id:"vegalite",level:2},{value:"VegaLiteViewer",id:"vegaliteviewer",level:2},{value:"VideoViewer",id:"videoviewer",level:2},{value:"Webview",id:"webview",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",img:"img",li:"li",p:"p",ul:"ul",...(0,n.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"applications",children:"Applications"}),"\n",(0,a.jsx)(t.p,{children:"Here are the applications in the SAGE3 system."}),"\n",(0,a.jsx)(t.h2,{id:"aipane",children:"AIPane"}),"\n",(0,a.jsx)(t.p,{children:"Experiment on triggering AI models from the UI."}),"\n",(0,a.jsx)(t.h2,{id:"csvviewer",children:"CSVViewer"}),"\n",(0,a.jsxs)(t.p,{children:["Simple viewer application from CSV files. No operations on the data is available.\nCSV files can be uploaded to the asset manager and are automatically opened using this application.\nCSV files are parse on the client side using the ",(0,a.jsx)(t.a,{href:"https://csv.js.org/parse/",children:"csv-parse"})," library. It could potentially parse large files using its stream API, but it is not used yet.\nThe table is built using ",(0,a.jsx)(t.a,{href:"https://virtuoso.dev/",children:"React Virtuoso"})," which is a high-performance virtualized list component for React."]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:"https://user-images.githubusercontent.com/5595452/223557405-3cc1ec05-01c2-4101-bfeb-99856d1e9270.jpg",alt:"Screenshot 2023-03-07 at 2 54 18 PM"})}),"\n",(0,a.jsx)(t.h2,{id:"chartgenerator",children:"ChartGenerator"}),"\n",(0,a.jsxs)(t.p,{children:["Internal application to generate charts in ",(0,a.jsx)(t.code,{children:"chartjs"})," for the HCDP (Hawaii Mesonet) data visualization application."]}),"\n",(0,a.jsx)(t.h2,{id:"chartmaker",children:"ChartMaker"}),"\n",(0,a.jsx)(t.p,{children:"Internal application (Arti) to generate charts from datasets using a natural language processing (NLP) module."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:"https://user-images.githubusercontent.com/5595452/226081128-a48ce2a6-3348-449a-b76c-e8a93f9c24c7.jpg",alt:"arti"})}),"\n",(0,a.jsx)(t.h2,{id:"clock",children:"Clock"}),"\n",(0,a.jsxs)(t.p,{children:["Clock is a simple application that displays time using an SVG clock face (current time of the client). D3.js is used to render the clock face and the hands.\nAn input box allows the user to type a location to show the time at that location. Google maps is used to geocode the location and ",(0,a.jsx)(t.code,{children:"timezonedb"})," is used to get the time zone information.\nThe location/timezone process is buggy right now."]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:"https://user-images.githubusercontent.com/5595452/223557467-920aac2f-90b6-4020-9146-f3656e4a1596.jpg",alt:"Screenshot 2023-03-07 at 3 04 01 PM"})}),"\n",(0,a.jsx)(t.h2,{id:"cobrowse",children:"Cobrowse"}),"\n",(0,a.jsx)(t.p,{children:'An experiement in cobrowsing. The user starting the session is the "driver" and streams the pixels of the browser window to the other users. The other users are "passengers" and see the driver\'s browser window.\nPixels are captured using Electron API of the webview and sent using websockets. A webRTC peer-to-peer approach could be used instead of websockets.'}),"\n",(0,a.jsx)(t.p,{children:"Application not functional yet."}),"\n",(0,a.jsx)(t.h2,{id:"counter",children:"Counter"}),"\n",(0,a.jsx)(t.p,{children:"A simple counter application that can be used to test the SAGE3 system and a tutorial for creating new applications, showing how to maintain state and communicate with the server."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:"https://user-images.githubusercontent.com/5595452/223557624-173c2ca5-654b-4832-876b-5f514bee5172.jpg",alt:"Screenshot 2023-03-07 at 3 04 45 PM"})}),"\n",(0,a.jsx)(t.h2,{id:"datatable",children:"DataTable"}),"\n",(0,a.jsx)(t.p,{children:"Experiment on displaying tabular data and applying operations on the data (filter, sort, ...) using Python backend."}),"\n",(0,a.jsx)(t.h2,{id:"deepzoomimage",children:"DeepZoomImage"}),"\n",(0,a.jsxs)(t.p,{children:["A viewer for DeepZoom images. DeepZoom images are a format for tiled images that can be used to display large images. The DeepZoom format is supported by many other frameworks.\nLarge images are processed using ",(0,a.jsx)(t.a,{href:"https://www.libvips.org/",children:"VIPS"})," and converted to DeepZoom format. It resuls in a directory with a ",(0,a.jsx)(t.code,{children:"dzi"})," file and a ",(0,a.jsx)(t.code,{children:"files"})," directory with the tiles, that needs to be hosted on a web server.\nWe use the ",(0,a.jsx)(t.a,{href:"https://openseadragon.github.io/",children:"OpenSeadragon"})," library to display the images."]}),"\n",(0,a.jsx)(t.p,{children:"Interaction:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Click and drag to pan"}),"\n",(0,a.jsx)(t.li,{children:"Scroll to zoom in and out"}),"\n",(0,a.jsx)(t.li,{children:"Click to zoom in, Shift+click to zoom out"}),"\n",(0,a.jsx)(t.li,{children:"Keys - and = to zoom in and out"}),"\n",(0,a.jsx)(t.li,{children:"Keyboard arrows to pan"}),"\n",(0,a.jsx)(t.li,{children:"Minimap on the top-right shows the current view"}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:"https://user-images.githubusercontent.com/5595452/226064313-e421f456-8d6c-4b99-b6f9-b2f6823fed6b.jpg",alt:"dzi"})}),"\n",(0,a.jsx)(t.h2,{id:"gltfviewer",children:"GLTFViewer"}),"\n",(0,a.jsxs)(t.p,{children:["A simple 3D model viewer using the ",(0,a.jsx)(t.a,{href:"https://threejs.org/",children:"Three.js"})," library. We also use the React render for Three.js ",(0,a.jsx)(t.a,{href:"https://docs.pmnd.rs/react-three-fiber/getting-started/introduction",children:"react-three/fiber"}),". The model is loaded using the ",(0,a.jsx)(t.a,{href:"https://threejs.org/docs/#examples/en/loaders/GLTFLoader",children:"GLTFLoader"}),".\nGLTF files can be uploaded to the asset manager and are automatically opened using this application. The 3D file can be downloaded from the application."]}),"\n",(0,a.jsx)(t.p,{children:"This is a work in progress, to be integrated with the HDM VR work in Unity."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:"https://user-images.githubusercontent.com/5595452/226064338-3facbbb9-b3cf-436c-83fc-39d24a9eab9d.jpg",alt:"gltf-molecule"})}),"\n",(0,a.jsx)(t.h2,{id:"hcdp",children:"HCDP"}),"\n",(0,a.jsx)(t.p,{children:"Internal data visualization application for the Hawaii Mesonet project."}),"\n",(0,a.jsx)(t.h2,{id:"imageviewer",children:"ImageViewer"}),"\n",(0,a.jsx)(t.p,{children:"Application is displaying images. Valid formats are handled when the file is uploaded to the asset manager (JPEG, PNG, ...). HEIC are currently not supported because they require a native library to be installed on the server.\nAfter upload, all images are scaled to multiple resolutions and converted to the efficent web-compatible WebP format. The original image is also kept for download, but converted to JEPG for compatibility.\nThe viewer matches dynamically the window size, dpi of the display, and scale of the board to an optimal resolution."}),"\n",(0,a.jsx)(t.p,{children:"The application supports displaying bounding boxes generated by AI models.\nThe application has also access to all the metadata collected on the initial file (EXIF, IPTC, XMP, ...)."}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.img,{src:"https://user-images.githubusercontent.com/5595452/226081145-1e3fef54-f239-4bc5-af18-9b67390dd4b2.jpg",alt:"image_jwst"}),"\n(ref: NASA)"]}),"\n",(0,a.jsx)(t.h2,{id:"jupyterlab",children:"JupyterLab"}),"\n",(0,a.jsx)(t.p,{children:"Webview into the Jupyter instance running in the backend.\nMight be deprecated in the future (security and collaboration issues).\nMigtht be replaced by a standard notebook render (PDF, image, ...) or a nbviewer instance."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:"https://user-images.githubusercontent.com/5595452/226064527-a87e7632-ecd4-470a-af5d-2ca1b38e9ce9.jpg",alt:"notebook"})}),"\n",(0,a.jsx)(t.h2,{id:"kerneldashboard",children:"KernelDashboard"}),"\n",(0,a.jsx)(t.p,{children:"Application to create and monitor Jupyter kernels in the backend."}),"\n",(0,a.jsx)(t.p,{children:"Deprecated, to be converted to a panel."}),"\n",(0,a.jsx)(t.h2,{id:"leaflet",children:"LeafLet"}),"\n",(0,a.jsxs)(t.p,{children:["Simple map application using the Leaflet library and the react-leaflet module ",(0,a.jsx)(t.a,{href:"https://react-leaflet.js.org/",children:"react-leaflet"}),". The user can move the map using the mouse or the keyboard. The navigation is synchronized across all users. Street or satellite view can be selected. An input box allow a user to type a location to show the map at that location. ESRI geocoder is used to geocode the location (using a SAGE3 API key)."]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:"https://user-images.githubusercontent.com/5595452/223581617-5db2fd38-f277-4578-bc4e-46862c508cb8.jpg",alt:"Screenshot 2023-03-07 at 4 26 55 PM"})}),"\n",(0,a.jsx)(t.p,{children:"GeoJSON data can be uploaded to the asset manager and displayed on the map. The data is displayed using a Leaflet.GeoJSON data layer."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:"https://user-images.githubusercontent.com/5595452/226064563-849eaad5-bf53-43ed-8359-9d45911c1bab.jpg",alt:"leaflet-geojson"})}),"\n",(0,a.jsx)(t.h2,{id:"notepad",children:"Notepad"}),"\n",(0,a.jsxs)(t.p,{children:["Notepad is a collaborative text editor. It uses the ",(0,a.jsx)(t.a,{href:"https://quilljs.com/",children:"Quill"})," library to display the text. Styling can be applied to the text. Produced text can be downloaded as a HTML file. Collaboration is implemented peer-to-peer using ",(0,a.jsx)(t.a,{href:"https://docs.yjs.dev/",children:"Yjs"})," where text ",(0,a.jsx)(t.code,{children:"deltas"})," are exchanged between peers. The text is stored in the SAGE3 application state as needed."]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:"https://user-images.githubusercontent.com/5595452/223581631-7e336d17-3e3d-4f01-aaac-0415f0f33911.jpg",alt:"Screenshot 2023-03-07 at 4 36 57 PM"})}),"\n",(0,a.jsx)(t.h2,{id:"pdfresult",children:"PDFResult"}),"\n",(0,a.jsx)(t.p,{children:"Internal application to display the results of a PDF analysis. Multiple Python libraries are used to extract information from the PDF file in the backend. The results are displayed in a table: metadata, links, references, ..."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:"https://user-images.githubusercontent.com/5595452/223581651-2bcd3667-2435-4561-bdb1-f1e9f9225698.jpg",alt:"Screenshot 2023-03-07 at 4 39 13 PM"})}),"\n",(0,a.jsx)(t.h2,{id:"pdfviewer",children:"PDFViewer"}),"\n",(0,a.jsxs)(t.p,{children:["PDF viewing application. PDF files are uploaded to the asset manager and are automatically opened using this application. The PDF file can be downloaded from the application. PDF files are processed in the backend using ",(0,a.jsx)(t.a,{href:"https://mozilla.github.io/pdf.js/",children:"pdf-js"})," and converted to images (at multiple resolutions). The images are then displayed in the application. Navigation across pages is synchronized across all users. Multiple pages can be displayed at the same time to leverage the available screen space. The file can be downloaded as a PDF."]}),"\n",(0,a.jsx)(t.p,{children:"Shortcut keys:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Next page: Arrow right, Arrow down"}),"\n",(0,a.jsx)(t.li,{children:"Previous page: Arrow left, Arrow up"}),"\n",(0,a.jsx)(t.li,{children:"First page: 1 key"}),"\n",(0,a.jsx)(t.li,{children:"Last page: 0 key"}),"\n",(0,a.jsx)(t.li,{children:"Add a page: + key"}),"\n",(0,a.jsx)(t.li,{children:"Remove a page: - key"}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:"https://user-images.githubusercontent.com/5595452/223581696-1ed536a6-3b59-4538-85c5-61892550f817.jpg",alt:"Screenshot 2023-03-07 at 4 39 54 PM"})}),"\n",(0,a.jsx)(t.h2,{id:"pluginapp",children:"PluginApp"}),"\n",(0,a.jsxs)(t.p,{children:["IFrame application to allow the use of external applications. It can be coupled with the\n",(0,a.jsx)(t.a,{href:"https://www.npmjs.com/package/@sage3/sageplugin",children:"@sage3/sageplugin"})," npm package to synchronize the state of the application across all users."]}),"\n",(0,a.jsx)(t.p,{children:"All kind of HTML/CSS/JS applications can be used. The application plugin is uploaded and hosted on the SAGE3 server (see plugin documentation)."}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.img,{src:"https://user-images.githubusercontent.com/5595452/226064647-4b08d2cd-51f9-45eb-9bd2-6206def9fb2b.jpg",alt:"plugin-potree"}),"\n",(0,a.jsx)(t.img,{src:"https://user-images.githubusercontent.com/5595452/226064694-d97658e6-12a3-44cd-83d5-b8c532f73f6e.jpg",alt:"plugin-d3"}),"\n",(0,a.jsx)(t.img,{src:"https://user-images.githubusercontent.com/5595452/226064711-693f54aa-5f98-45df-b561-268d7d3240ce.jpg",alt:"plugin-unity3d-car"})]}),"\n",(0,a.jsx)(t.h2,{id:"sagecell",children:"SageCell"}),"\n",(0,a.jsxs)(t.p,{children:["The computational cell application. Python code can be entered in the cell and executed in a Jupyter kernel in the backend. Other languages possible (R, Julia, etc). The results are displayed in the cell: we support most of the cell output formats such as text, markdown, images, PDF, HTML and plotly. The cell can be resized and moved around the board. The cell is synchronized with all users. The code can be downloaded as a '.py' Python file and uploaded to the asset manager. Opening a Python file from the asset manager will open a new cell with the code. A code cell can be duplicated for quick prototyping. The editor used the powerful ",(0,a.jsx)(t.a,{href:"https://microsoft.github.io/monaco-editor/",children:"Monaco"})," editor."]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:"https://user-images.githubusercontent.com/5595452/226021566-7db34df1-2997-43dd-b319-c81a93fbcb6d.png",alt:"sage-cell"})}),"\n",(0,a.jsx)(t.p,{children:"A user can instatiate many kernels in the backend (using the Kernel panel) and switch each cell to any of the available kernels. Execution can be stopped at any time. The cell can be cleared to remove all the output."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:"https://user-images.githubusercontent.com/5595452/223581841-209af909-8cbb-42f7-9fa8-44aeb55a920e.jpg",alt:"Screenshot 2023-03-07 at 4 54 08 PM"})}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:"https://user-images.githubusercontent.com/5595452/223581797-35be71bd-39e9-46e0-ac49-2b20cfa13dd4.jpg",alt:"Screenshot 2023-03-07 at 4 53 25 PM"})}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:"https://user-images.githubusercontent.com/5595452/223581811-a6b50dae-be86-4952-a039-3ace465b9edf.jpg",alt:"Screenshot 2023-03-07 at 4 53 42 PM"})}),"\n",(0,a.jsx)(t.h2,{id:"screenshare",children:"Screenshare"}),"\n",(0,a.jsxs)(t.p,{children:["Implemented in the TwilioScreenshare application. Screensharing is backed by a Twilio backend service to manage users and rooms in a peer-to-peer fashion. Your server has to be configured with a Twilio account and a valid API key. The application is using the ",(0,a.jsx)(t.a,{href:"https://www.twilio.com/docs/video/javascript",children:"twilio-video"})," npm package to manage the screensharing session."]}),"\n",(0,a.jsx)(t.p,{children:"A user can select a monitor or a window to share. The quality of the video is adjusted automatically to the available bandwidth. The video is synchronized across all users.\nBecause of the associated costs, a session is limit to 75 minutes by default, but another session can be started right away. When the user sharing the screen leaves the board, the session is automatically closed. The user can also close the session manually.\nMultiple users can share their screen at the same time."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:"https://user-images.githubusercontent.com/5595452/226020790-e6ef0b2a-bed7-47c9-80e5-a86b6c289dde.jpg",alt:"Screenshot 2023-03-17 at 2 26 39 PM"})}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:"https://user-images.githubusercontent.com/5595452/226020829-d18f17f0-5537-4a15-a5eb-15f7093490be.jpg",alt:"Screenshot 2023-03-17 at 2 27 41 PM"})}),"\n",(0,a.jsx)(t.h2,{id:"seer",children:"Seer"}),"\n",(0,a.jsx)(t.p,{children:"Experiment in AI, NLP and Programming."}),"\n",(0,a.jsx)(t.h2,{id:"sensoroverview",children:"SensorOverview"}),"\n",(0,a.jsx)(t.p,{children:"Internal data visualization application for the Hawaii Mesonet project."}),"\n",(0,a.jsx)(t.h2,{id:"stickie",children:"Stickie"}),"\n",(0,a.jsx)(t.p,{children:"Post-it note application. A user can create a post-it note and move it around the board. The note is synchronized across all users. The note can be resized and the font size can be adjusted. The note can be downloaded as a Text or Markdown file. Opening a '.md' file from the asset manager will open a new note with the text."}),"\n",(0,a.jsx)(t.p,{children:"User can select the color of the stickie, the font size, and to lock the stickie to prevent other users from editing it. While editing, 'Shift+Tab' will create a new stickie next to the current one. The name of the user is shown in the title bar of the stickie."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:"https://user-images.githubusercontent.com/5595452/223581914-f889dfe1-82f0-409b-bb48-c8012ff0e8a3.jpg",alt:"Screenshot 2023-03-07 at 5 23 56 PM"})}),"\n",(0,a.jsx)(t.h2,{id:"vegalite",children:"VegaLite"}),"\n",(0,a.jsxs)(t.p,{children:["Editor for the Vega-Lite visualization language. The editor used the powerful ",(0,a.jsx)(t.a,{href:"https://microsoft.github.io/monaco-editor/",children:"Monaco"})," editor. It loads a JSON specification and displays the visualization in the VegaLiteViewer application. JSON files from the asset manager can be opened in the editor."]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:"https://user-images.githubusercontent.com/5595452/223581944-a191906a-a538-4af7-9e04-91923a5df929.jpg",alt:"Screenshot 2023-03-07 at 5 27 55 PM"})}),"\n",(0,a.jsx)(t.h2,{id:"vegaliteviewer",children:"VegaLiteViewer"}),"\n",(0,a.jsxs)(t.p,{children:["Internal data visualization application for the VegaLite application. Allows the visualization to be saved as PNG image file.\nThe viewer is using the ",(0,a.jsx)(t.a,{href:"https://github.com/vega/vega-embed",children:"vega-embed"})," to render a Vega-Lite visualization."]}),"\n",(0,a.jsx)(t.h2,{id:"videoviewer",children:"VideoViewer"}),"\n",(0,a.jsx)(t.p,{children:"Video viewing application. Web-compatible video files are uploaded to the asset manager and are automatically opened using this application. MP4 format is the best option. MOV files might work if MP4 codec is used internally. The video file can be downloaded from the application. Navigation is synchronized across all users in a best effort fashion. The file can be downloaded as a video. Video are muted by default to prevent audio feedback."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:"https://user-images.githubusercontent.com/5595452/226064758-b04abd52-e72f-4ff2-a65f-10cf1f85f149.jpg",alt:"video-quest"})}),"\n",(0,a.jsx)(t.h2,{id:"webview",children:"Webview"}),"\n",(0,a.jsxs)(t.p,{children:["Webview is browser window that can be opened in the board. It can be used to display ",(0,a.jsx)(t.code,{children:"most"})," web pages. The navigation is synchronized across all users, but NOT the scroll position. Non-deterministic web pages (such as pages with ads) or pages with wegbl/canvas (such as games) might not synchronize properly. Login pages might not work properly. It is best to use ",(0,a.jsx)(t.code,{children:"public"})," content inside webviews (like public page of a Google doc)."]}),"\n",(0,a.jsx)(t.p,{children:"Basic navigation and scaling is provided in the toolbar. Webviews are muted by default to prevent audio feedback. Using 'Ctrl-click / Cmd-click' when clicking on a link in a webview will open the link in a new webview next to the current one."}),"\n",(0,a.jsxs)(t.p,{children:["The webview is using the ",(0,a.jsx)(t.a,{href:"https://www.electronjs.org/docs/latest/api/webview-tag",children:"webview"})," API from Electron."]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.img,{src:"https://user-images.githubusercontent.com/5595452/226081198-37604db1-1d7a-42e5-8305-a95bdd72f8f0.jpg",alt:"webview_gateways"}),"\n",(0,a.jsx)(t.img,{src:"https://user-images.githubusercontent.com/5595452/226064775-3dc15b8f-7e4c-42d5-a07e-28b7a32e4f77.jpg",alt:"webview-pubmed"})]})]})}function h(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},1151:(e,t,i)=>{i.d(t,{Z:()=>o,a:()=>r});var a=i(7294);const n={},s=a.createContext(n);function r(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);