"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8504],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>c});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),o=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},u=function(e){var t=o(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),m=o(a),c=i,k=m["".concat(s,".").concat(c)]||m[c]||d[c]||l;return a?n.createElement(k,r(r({ref:t},u),{},{components:a})):n.createElement(k,r({ref:t},u))}));function c(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=a.length,r=new Array(l);r[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:i,r[1]=p;for(var o=2;o<l;o++)r[o]=a[o];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},1987:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>p,toc:()=>o});var n=a(3117),i=(a(7294),a(3905));const l={sidebar_position:11},r="HTTP API",p={unversionedId:"HTTP-API",id:"HTTP-API",title:"HTTP API",description:"SAGE3 employs a RESTful API for communication between the client and server. The API is built using Express routers. The API is split into two parts, the public and protected API. The public API is accessible to anyone, while the private API requires a valid login or a JWT token to access.",source:"@site/docs/HTTP-API.md",sourceDirName:".",slug:"/HTTP-API",permalink:"/docs/HTTP-API",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/HTTP-API.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11},sidebar:"tutorialSidebar",previous:{title:"XR Integration",permalink:"/docs/XR-Integration"},next:{title:"License",permalink:"/docs/License"}},s={},o=[{value:"Info",id:"info",level:2},{value:"<code>/api/info</code>",id:"apiinfo",level:3},{value:"Configuration",id:"configuration",level:2},{value:"<code>/api/configuration</code>",id:"apiconfiguration",level:3},{value:"Time",id:"time",level:2},{value:"<code>/api/time</code>",id:"apitime",level:3},{value:"Files",id:"files",level:2},{value:"<code>/api/files/:id/:token</code>",id:"apifilesidtoken",level:3},{value:"Collections",id:"collections",level:2},{value:"Applications",id:"applications",level:3},{value:"<code>/api/apps</code>",id:"apiapps",level:4},{value:"<code>/api/apps</code>",id:"apiapps-1",level:4},{value:"<code>/api/apps/:id</code>",id:"apiappsid",level:4},{value:"<code>/api/apps/?query=xyz</code>",id:"apiappsqueryxyz",level:4},{value:"<code>/api/apps</code>",id:"apiapps-2",level:4},{value:"<code>/api/apps/:id</code>",id:"apiappsid-1",level:4},{value:"<code>/api/apps</code>",id:"apiapps-3",level:4}],u={toc:o};function d(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"http-api"},"HTTP API"),(0,i.kt)("p",null,"SAGE3 employs a RESTful API for communication between the client and server. The API is built using ",(0,i.kt)("a",{parentName:"p",href:"https://expressjs.com/"},"Express")," routers. The API is split into two parts, the ",(0,i.kt)("inlineCode",{parentName:"p"},"public")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"protected")," API. The ",(0,i.kt)("inlineCode",{parentName:"p"},"public")," API is accessible to anyone, while the ",(0,i.kt)("inlineCode",{parentName:"p"},"private")," API requires a valid login or a ",(0,i.kt)("inlineCode",{parentName:"p"},"JWT")," token to access."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Public API",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#info"},"Info"),": Provides generic information about the SAGE3 server."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#time"},"Time"),": Provides the current server time since epoch."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#files"},"Files"),": Download a file asset using a UUID token"))),(0,i.kt)("li",{parentName:"ul"},"Protected API",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Collections: users, assets, apps, boards, rooms, presence, message, plugins,"),(0,i.kt)("li",{parentName:"ul"},"Misc: configuration, nlp")))),(0,i.kt)("h2",{id:"info"},"Info"),(0,i.kt)("p",null,"Provides generic information about the SAGE3 server."),(0,i.kt)("h3",{id:"apiinfo"},(0,i.kt)("inlineCode",{parentName:"h3"},"/api/info")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Method: ",(0,i.kt)("inlineCode",{parentName:"li"},"GET")),(0,i.kt)("li",{parentName:"ul"},"Request",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"No fields required"))),(0,i.kt)("li",{parentName:"ul"},"Response:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Body:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "serverName": "Chicago",\n  "port": 443,\n  "production": true,\n  "version": "1.0.0-beta.2",\n  "logins": ["google", "cilogon", "guest", "jwt"],\n  "isSage3": true\n}\n')),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"serverName (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),"): The name of the server."),(0,i.kt)("li",{parentName:"ul"},"port (",(0,i.kt)("inlineCode",{parentName:"li"},"number"),"): The port the server is running on."),(0,i.kt)("li",{parentName:"ul"},"production (",(0,i.kt)("inlineCode",{parentName:"li"},"boolean"),"): Is this server a production or development server?"),(0,i.kt)("li",{parentName:"ul"},"version (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),"): The version of the SAGE3 server code this server is running."),(0,i.kt)("li",{parentName:"ul"},"logins (",(0,i.kt)("inlineCode",{parentName:"li"},"string[]"),'): The enabled login strategies this server is running. Ex. ("guest" | "google" | "cilogon" | "jwt")'),(0,i.kt)("li",{parentName:"ul"},"isSage3 (",(0,i.kt)("inlineCode",{parentName:"li"},"boolean"),"): Is this a sage3 server? Used to verify if URL is a SAGE3 server incase you need to check before accessing.")))))),(0,i.kt)("h2",{id:"configuration"},"Configuration"),(0,i.kt)("p",null,"Provides generic information about the SAGE3 server, but unlike the ",(0,i.kt)("inlineCode",{parentName:"p"},"info")," endpoint this requires ",(0,i.kt)("inlineCode",{parentName:"p"},"credentials")," since it provides more information."),(0,i.kt)("h3",{id:"apiconfiguration"},(0,i.kt)("inlineCode",{parentName:"h3"},"/api/configuration")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Method: ",(0,i.kt)("inlineCode",{parentName:"li"},"GET")),(0,i.kt)("li",{parentName:"ul"},"Request",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"credentials: ",(0,i.kt)("inlineCode",{parentName:"li"},"Required")))),(0,i.kt)("li",{parentName:"ul"},"Response:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Body:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "serverName": "Chicago",\n  "port": 443,\n  "production": true,\n  "version": "1.0.0-beta.2",\n  "logins": ["google", "cilogon", "guest", "jwt"],\n  "isSage3": true,\n  "namespace": "f44c0a66-f1d4-454a-b1ca-00a49782bc27",\n  "token": "79602da798f32f1e",\n  "admins": ["johedoe@gmail.com"]\n}\n')),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"serverName (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),"): The name of the server."),(0,i.kt)("li",{parentName:"ul"},"port (",(0,i.kt)("inlineCode",{parentName:"li"},"number"),"): The port the server is running on."),(0,i.kt)("li",{parentName:"ul"},"production (",(0,i.kt)("inlineCode",{parentName:"li"},"boolean"),"): Is this server a production or development server?"),(0,i.kt)("li",{parentName:"ul"},"version (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),"): The version of the SAGE3 server code this server is running."),(0,i.kt)("li",{parentName:"ul"},"logins (",(0,i.kt)("inlineCode",{parentName:"li"},"string[]"),'): The enabled login strategies this server is running. Ex. ("guest" | "google" | "cilogon" | "jwt")'),(0,i.kt)("li",{parentName:"ul"},"isSage3 (",(0,i.kt)("inlineCode",{parentName:"li"},"boolean"),"): Is this a sage3 server? Used to verify if URL is a SAGE3 server incase you need to check before accessing."),(0,i.kt)("li",{parentName:"ul"},"namespace (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),"): Namespace for signing uuid v5 keys."),(0,i.kt)("li",{parentName:"ul"},"token (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),"): Token to access JupyterLab."),(0,i.kt)("li",{parentName:"ul"},"admins (",(0,i.kt)("inlineCode",{parentName:"li"},"string[]"),"): Array of user's who have admin rights. (emails)")))))),(0,i.kt)("h2",{id:"time"},"Time"),(0,i.kt)("p",null,"Provides the current server time since epoch."),(0,i.kt)("h3",{id:"apitime"},(0,i.kt)("inlineCode",{parentName:"h3"},"/api/time")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Method: ",(0,i.kt)("inlineCode",{parentName:"p"},"GET"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Request"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"No fields required"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Response:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Body:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "epoch": 1680641516527\n}\n')),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"epoch (",(0,i.kt)("inlineCode",{parentName:"li"},"number"),"): The Server's current time since epoch. (ms)")))))),(0,i.kt)("h2",{id:"files"},"Files"),(0,i.kt)("p",null,"Acccess a file from the server's asset collection using the asset's ID and a UUIDv5 token. This route is used to make an asset publicly accessible: the developer computes a UUIDv5 token using the asset's ID and a secret key (SAGE3's namespace), and then the client can access the asset using the ID and the token."),(0,i.kt)("h3",{id:"apifilesidtoken"},(0,i.kt)("inlineCode",{parentName:"h3"},"/api/files/:id/:token")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Method: ",(0,i.kt)("inlineCode",{parentName:"li"},"GET")),(0,i.kt)("li",{parentName:"ul"},"Route",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"id: The id of the file."),(0,i.kt)("li",{parentName:"ul"},"token: A UUIDv5 token."))),(0,i.kt)("li",{parentName:"ul"},"Request",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"No fields required"))),(0,i.kt)("li",{parentName:"ul"},"Response:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Status: ",(0,i.kt)("inlineCode",{parentName:"li"},"200")),(0,i.kt)("li",{parentName:"ul"},"Response: The file requested.")))),(0,i.kt)("h2",{id:"collections"},"Collections"),(0,i.kt)("p",null,"The various collections within SAGE3."),(0,i.kt)("p",null,"The SBDocument is the Document within the actual database collections. Documents are just ",(0,i.kt)("inlineCode",{parentName:"p"},"JSON")," objects with the following structure:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"type SBDocument = {\n  _id: string;\n  _createdAt: number;\n  _createdBy: string;\n  _updatedAt: number;\n  _updatedBy: string;\n  // Type refers to the application specific data type, which extends SBJSON\n  data: Type;\n};\n")),(0,i.kt)("p",null,"The various collections have their own ",(0,i.kt)("inlineCode",{parentName:"p"},"types")," and are on the ",(0,i.kt)("inlineCode",{parentName:"p"},"data")," property."),(0,i.kt)("h3",{id:"applications"},"Applications"),(0,i.kt)("p",null,"The applications collection contains all of the server's open applications. Opened applications are apps that are currently visiable on a board somewhere."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"type AppSchema = {\n  title: string;\n  roomId: string;\n  boardId: string;\n  position: { x: number; y: number; z: number };\n  size: { width: number; height: number; depth: number };\n  rotation: { x: number; y: number; z: number };\n  type: AppName; // Application name: Counter, Stickie, ...\n  state: AppState; // Application-specific data type\n  raised: boolean;\n};\n")),(0,i.kt)("h4",{id:"apiapps"},(0,i.kt)("inlineCode",{parentName:"h4"},"/api/apps")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Method: ",(0,i.kt)("inlineCode",{parentName:"li"},"POST")),(0,i.kt)("li",{parentName:"ul"},"Request",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"credentials: ",(0,i.kt)("inlineCode",{parentName:"li"},"Required")),(0,i.kt)("li",{parentName:"ul"},"headers:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "Accept": "application/json",\n  "Content-Type": "application/json"\n}\n'))),(0,i.kt)("li",{parentName:"ul"},"body: ",(0,i.kt)("inlineCode",{parentName:"li"},"AppSchema")," or ",(0,i.kt)("inlineCode",{parentName:"li"},'{"batch": AppSchema[]}')))),(0,i.kt)("li",{parentName:"ul"},"Response:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Status: ",(0,i.kt)("inlineCode",{parentName:"li"},"200")," | ",(0,i.kt)("inlineCode",{parentName:"li"},"500")),(0,i.kt)("li",{parentName:"ul"},"Body:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "success": true,\n  "message": "Successfully created documents.",\n  "data": [\n    {\n      "_id": "5cbfca4c-3636-47a7-a368-57ebe7443818",\n      "_createdAt": 1680553407429,\n      "_createdBy": "d725ada3-cb66-4536-aef0-186f0dcae6ab",\n      "_updatedAt": 1680553407429,\n      "_updatedBy": "d725ada3-cb66-4536-aef0-186f0dcae6ab",\n      "data": {\n        "title": "A Counting App",\n        "roomId": "ec3dcbe8-8e0f-4fa8-89e1-b8c9663eae64",\n        "boardId": "678c900a-e9fd-4448-b370-84aed6bf3766",\n        "position": { "x": 0, "y": 0, "z": 0 },\n        "size": { "width": 300, "height": 300, "depth": 0 },\n        "position": { "x": 0, "y": 0, "z": 0 },\n        "type": "Counter",\n        "state": { "count": 42 },\n        "raised": true\n      }\n    }\n  ]\n}\n')),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"success (",(0,i.kt)("inlineCode",{parentName:"li"},"boolean"),"): True if the request was successful."),(0,i.kt)("li",{parentName:"ul"},"message (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),"): A message about requests success or failure."),(0,i.kt)("li",{parentName:"ul"},"data (",(0,i.kt)("inlineCode",{parentName:"li"},"SBDocument<AppSchema>[] | undefined"),"): An array of the newly added documents. In the above example we are showing a ",(0,i.kt)("inlineCode",{parentName:"li"},"Counter")," app with its ",(0,i.kt)("inlineCode",{parentName:"li"},"state")," set to: ",(0,i.kt)("inlineCode",{parentName:"li"},'{"count": 42}'),". If the request was unsuccesful then this will be undefined.")))))),(0,i.kt)("h4",{id:"apiapps-1"},(0,i.kt)("inlineCode",{parentName:"h4"},"/api/apps")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Method: ",(0,i.kt)("inlineCode",{parentName:"li"},"GET")),(0,i.kt)("li",{parentName:"ul"},"Request",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"credentials: ",(0,i.kt)("inlineCode",{parentName:"li"},"Required")),(0,i.kt)("li",{parentName:"ul"},"headers:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "Accept": "application/json",\n  "Content-Type": "application/json"\n}\n'))),(0,i.kt)("li",{parentName:"ul"},"body: ",(0,i.kt)("inlineCode",{parentName:"li"},"Not Required")," or ",(0,i.kt)("inlineCode",{parentName:"li"},'{"batch": string[]}')))),(0,i.kt)("li",{parentName:"ul"},"Response:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Status: ",(0,i.kt)("inlineCode",{parentName:"li"},"200")," | ",(0,i.kt)("inlineCode",{parentName:"li"},"500")),(0,i.kt)("li",{parentName:"ul"},"Body:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "success": true,\n  "message": "Successfully retrieved the documents.",\n  "data": [\n    {\n      "_id": "5cbfca4c-3636-47a7-a368-57ebe7443818",\n      "_createdAt": 1680553407429,\n      "_createdBy": "d725ada3-cb66-4536-aef0-186f0dcae6ab",\n      "_updatedAt": 1680553407429,\n      "_updatedBy": "d725ada3-cb66-4536-aef0-186f0dcae6ab",\n      "data": {\n        "title": "A Counting App",\n        "roomId": "ec3dcbe8-8e0f-4fa8-89e1-b8c9663eae64",\n        "boardId": "678c900a-e9fd-4448-b370-84aed6bf3766",\n        "position": { "x": 0, "y": 0, "z": 0 },\n        "size": { "width": 300, "height": 300, "depth": 0 },\n        "position": { "x": 0, "y": 0, "z": 0 },\n        "type": "Counter",\n        "state": { "count": 42 },\n        "raised": true\n      }\n    }\n  ]\n}\n')),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"success (",(0,i.kt)("inlineCode",{parentName:"li"},"boolean"),"): True if the request was successful."),(0,i.kt)("li",{parentName:"ul"},"message (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),"): A message about requests success or failure."),(0,i.kt)("li",{parentName:"ul"},"data (",(0,i.kt)("inlineCode",{parentName:"li"},"SBDocument<AppSchema>[] | undefined"),"): An array of the requested documents. If the request was unsuccesful then this will be undefined.")))))),(0,i.kt)("h4",{id:"apiappsid"},(0,i.kt)("inlineCode",{parentName:"h4"},"/api/apps/:id")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Method: ",(0,i.kt)("inlineCode",{parentName:"li"},"GET")),(0,i.kt)("li",{parentName:"ul"},"Route",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"id: The id of the document you are requesting."))),(0,i.kt)("li",{parentName:"ul"},"Request",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"credentials: ",(0,i.kt)("inlineCode",{parentName:"li"},"Required")),(0,i.kt)("li",{parentName:"ul"},"headers:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "Accept": "application/json",\n  "Content-Type": "application/json"\n}\n'))))),(0,i.kt)("li",{parentName:"ul"},"Response:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Status: ",(0,i.kt)("inlineCode",{parentName:"li"},"200")," | ",(0,i.kt)("inlineCode",{parentName:"li"},"500")),(0,i.kt)("li",{parentName:"ul"},"Body:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "success": true,\n  "message": "Successfully retrieved the document.",\n  "data": [\n    {\n      "_id": "5cbfca4c-3636-47a7-a368-57ebe7443818",\n      "_createdAt": 1680553407429,\n      "_createdBy": "d725ada3-cb66-4536-aef0-186f0dcae6ab",\n      "_updatedAt": 1680553407429,\n      "_updatedBy": "d725ada3-cb66-4536-aef0-186f0dcae6ab",\n      "data": {\n        "title": "A Counting App",\n        "roomId": "ec3dcbe8-8e0f-4fa8-89e1-b8c9663eae64",\n        "boardId": "678c900a-e9fd-4448-b370-84aed6bf3766",\n        "position": { "x": 0, "y": 0, "z": 0 },\n        "size": { "width": 300, "height": 300, "depth": 0 },\n        "position": { "x": 0, "y": 0, "z": 0 },\n        "type": "Counter",\n        "state": { "count": 42 },\n        "raised": true\n      }\n    }\n  ]\n}\n')),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"success (",(0,i.kt)("inlineCode",{parentName:"li"},"boolean"),"): True if the request was successful."),(0,i.kt)("li",{parentName:"ul"},"message (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),"): A message about requests success or failure."),(0,i.kt)("li",{parentName:"ul"},"data (",(0,i.kt)("inlineCode",{parentName:"li"},"SBDocument<AppSchema>[] | undefined"),"): An array of the requested documents. If the request was unsuccesful then this will be undefined.")))))),(0,i.kt)("h4",{id:"apiappsqueryxyz"},(0,i.kt)("inlineCode",{parentName:"h4"},"/api/apps/?query=xyz")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Method: ",(0,i.kt)("inlineCode",{parentName:"li"},"GET")),(0,i.kt)("li",{parentName:"ul"},"Route",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"query: ",(0,i.kt)("inlineCode",{parentName:"li"},"roomId | boardId | type")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"type")," referes to the application type (e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"Counter"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"Stickie"),", etc)."))),(0,i.kt)("li",{parentName:"ul"},"Request",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"credentials: ",(0,i.kt)("inlineCode",{parentName:"li"},"Required")),(0,i.kt)("li",{parentName:"ul"},"headers:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "Accept": "application/json",\n  "Content-Type": "application/json"\n}\n'))))),(0,i.kt)("li",{parentName:"ul"},"Response:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Status: ",(0,i.kt)("inlineCode",{parentName:"li"},"200")," | ",(0,i.kt)("inlineCode",{parentName:"li"},"500")),(0,i.kt)("li",{parentName:"ul"},"Body:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "success": true,\n  "message": "Successfully retrieved documents.",\n  "data": [\n    {\n      "_id": "5cbfca4c-3636-47a7-a368-57ebe7443818",\n      "_createdAt": 1680553407429,\n      "_createdBy": "d725ada3-cb66-4536-aef0-186f0dcae6ab",\n      "_updatedAt": 1680553407429,\n      "_updatedBy": "d725ada3-cb66-4536-aef0-186f0dcae6ab",\n      "data": {\n        "title": "A Counting App",\n        "roomId": "ec3dcbe8-8e0f-4fa8-89e1-b8c9663eae64",\n        "boardId": "678c900a-e9fd-4448-b370-84aed6bf3766",\n        "position": { "x": 0, "y": 0, "z": 0 },\n        "size": { "width": 300, "height": 300, "depth": 0 },\n        "position": { "x": 0, "y": 0, "z": 0 },\n        "type": "Counter",\n        "state": { "count": 42 },\n        "raised": true\n      }\n    }\n  ]\n}\n')),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"success (",(0,i.kt)("inlineCode",{parentName:"li"},"boolean"),"): True if the request was successful."),(0,i.kt)("li",{parentName:"ul"},"message (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),"): A message about requests success or failure."),(0,i.kt)("li",{parentName:"ul"},"data (",(0,i.kt)("inlineCode",{parentName:"li"},"SBDocument<AppSchema>[] | undefined"),"): An array of the requested documents. If the request was unsuccesful then this will be undefined.")))))),(0,i.kt)("h4",{id:"apiapps-2"},(0,i.kt)("inlineCode",{parentName:"h4"},"/api/apps")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Method: ",(0,i.kt)("inlineCode",{parentName:"li"},"PUT")),(0,i.kt)("li",{parentName:"ul"},"Request",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"credentials: ",(0,i.kt)("inlineCode",{parentName:"li"},"Required")),(0,i.kt)("li",{parentName:"ul"},"headers:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "Accept": "application/json",\n  "Content-Type": "application/json"\n}\n'))),(0,i.kt)("li",{parentName:"ul"},"body: ",(0,i.kt)("inlineCode",{parentName:"li"},'{"batch": {id: string, update: AppSchema}[]}')))),(0,i.kt)("li",{parentName:"ul"},"Response:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Status: ",(0,i.kt)("inlineCode",{parentName:"li"},"200")," | ",(0,i.kt)("inlineCode",{parentName:"li"},"500")),(0,i.kt)("li",{parentName:"ul"},"Body:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "success": true,\n  "message": "Successfully updated documents.",\n  "data": true\n}\n')),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"success (",(0,i.kt)("inlineCode",{parentName:"li"},"boolean"),"): True if the request was successful."),(0,i.kt)("li",{parentName:"ul"},"message (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),"): A message about requests success or failure."),(0,i.kt)("li",{parentName:"ul"},"data (",(0,i.kt)("inlineCode",{parentName:"li"},"boolean"),"): True if the update was successfull.")))))),(0,i.kt)("h4",{id:"apiappsid-1"},(0,i.kt)("inlineCode",{parentName:"h4"},"/api/apps/:id")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Method: ",(0,i.kt)("inlineCode",{parentName:"li"},"PUT")),(0,i.kt)("li",{parentName:"ul"},"Route",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"id: The id of the document to update."))),(0,i.kt)("li",{parentName:"ul"},"Request",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"credentials: ",(0,i.kt)("inlineCode",{parentName:"li"},"Required")),(0,i.kt)("li",{parentName:"ul"},"headers:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "Accept": "application/json",\n  "Content-Type": "application/json"\n}\n'))),(0,i.kt)("li",{parentName:"ul"},"body: ",(0,i.kt)("inlineCode",{parentName:"li"},"AppSchema")))),(0,i.kt)("li",{parentName:"ul"},"Response:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Status: ",(0,i.kt)("inlineCode",{parentName:"li"},"200")," | ",(0,i.kt)("inlineCode",{parentName:"li"},"500")),(0,i.kt)("li",{parentName:"ul"},"Body:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "success": true,\n  "message": "Successfully updated the document.",\n  "data": true\n}\n')),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"success (",(0,i.kt)("inlineCode",{parentName:"li"},"boolean"),"): True if the request was successful."),(0,i.kt)("li",{parentName:"ul"},"message (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),"): A message about requests success or failure."),(0,i.kt)("li",{parentName:"ul"},"data (",(0,i.kt)("inlineCode",{parentName:"li"},"boolean"),"): True if the update was successfull.")))))),(0,i.kt)("h4",{id:"apiapps-3"},(0,i.kt)("inlineCode",{parentName:"h4"},"/api/apps")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Method: ",(0,i.kt)("inlineCode",{parentName:"li"},"DELETE")),(0,i.kt)("li",{parentName:"ul"},"Request",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"credentials: ",(0,i.kt)("inlineCode",{parentName:"li"},"Required")),(0,i.kt)("li",{parentName:"ul"},"headers:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "Accept": "application/json",\n  "Content-Type": "application/json"\n}\n'))),(0,i.kt)("li",{parentName:"ul"},"body: ",(0,i.kt)("inlineCode",{parentName:"li"},'{"batch": string[]}')))),(0,i.kt)("li",{parentName:"ul"},"Response:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Status: ",(0,i.kt)("inlineCode",{parentName:"li"},"200")," | ",(0,i.kt)("inlineCode",{parentName:"li"},"500")),(0,i.kt)("li",{parentName:"ul"},"Body:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "success": true,\n  "message": "Successfully retrieved the documents.",\n  "data": true\n}\n')),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"success (",(0,i.kt)("inlineCode",{parentName:"li"},"boolean"),"): True if the request was successful."),(0,i.kt)("li",{parentName:"ul"},"message (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),"): A message about requests success or failure."),(0,i.kt)("li",{parentName:"ul"},"data (",(0,i.kt)("inlineCode",{parentName:"li"},"boolean"),"): If the delete was successfull.")))))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"/api/apps/:id"))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Method: ",(0,i.kt)("inlineCode",{parentName:"li"},"DELETE")),(0,i.kt)("li",{parentName:"ul"},"Route",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"id: The id of the document to delete."))),(0,i.kt)("li",{parentName:"ul"},"Request",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"credentials: ",(0,i.kt)("inlineCode",{parentName:"li"},"Required")),(0,i.kt)("li",{parentName:"ul"},"headers:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "Accept": "application/json",\n  "Content-Type": "application/json"\n}\n'))))),(0,i.kt)("li",{parentName:"ul"},"Response:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Status: ",(0,i.kt)("inlineCode",{parentName:"li"},"200")," | ",(0,i.kt)("inlineCode",{parentName:"li"},"500")),(0,i.kt)("li",{parentName:"ul"},"Body:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "success": true,\n  "message": "Successfully retrieved the documents.",\n  "data": true\n}\n')),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"success (",(0,i.kt)("inlineCode",{parentName:"li"},"boolean"),"): True if the request was successful."),(0,i.kt)("li",{parentName:"ul"},"message (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),"): A message about requests success or failure."),(0,i.kt)("li",{parentName:"ul"},"data (",(0,i.kt)("inlineCode",{parentName:"li"},"boolean"),"): If the delete was successfull.")))))))}d.isMDXComponent=!0}}]);