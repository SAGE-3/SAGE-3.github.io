"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5532],{8339:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>a});var i=t(5893),l=t(1151);const r={sidebar_position:12,title:"Electron"},s="Electron Client",c={id:"Electron-client",title:"Electron",description:"Sources",source:"@site/docs/Electron-client.md",sourceDirName:".",slug:"/Electron-client",permalink:"/docs/Electron-client",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Electron-client.md",tags:[],version:"current",sidebarPosition:12,frontMatter:{sidebar_position:12,title:"Electron"},sidebar:"tutorialSidebar",previous:{title:"FAQ",permalink:"/docs/FAQ"},next:{title:"HTTP API",permalink:"/docs/HTTP-API"}},o={},a=[{value:"Sources",id:"sources",level:2},{value:"TLDR",id:"tldr",level:3},{value:"Running",id:"running",level:2},{value:"Build",id:"build",level:2},{value:"Mac",id:"mac",level:3},{value:"Windows",id:"windows",level:3},{value:"Sign",id:"sign",level:2},{value:"Mac",id:"mac-1",level:3},{value:"Win",id:"win",level:3},{value:"Deploy",id:"deploy",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"electron-client",children:"Electron Client"}),"\n",(0,i.jsx)(n.h2,{id:"sources",children:"Sources"}),"\n",(0,i.jsxs)(n.p,{children:["The development team mainly uses the ",(0,i.jsx)(n.code,{children:"dev"})," branch to develop new features and fix bugs. The main branch is updated for main releases."]}),"\n",(0,i.jsx)(n.h3,{id:"tldr",children:"TLDR"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/SAGE-3/next\ncd next\ngit checkout dev\ncd webstack/clients/electron\nnpm install\nnpx electron electron.js -s https://mini.sage3.app\n"})}),"\n",(0,i.jsx)(n.h2,{id:"running",children:"Running"}),"\n",(0,i.jsxs)(n.p,{children:["You can run the Electron client from sources, the main source file is ",(0,i.jsx)(n.code,{children:"electron.js"})," (in ",(0,i.jsx)(n.code,{children:"webstack/clients/electron"})," folder)."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npx electron electron.js -h\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'Usage: electron [options]\n\nOptions:\n  -V, --version              output the version number\n  -d, --display <n>          Display client ID number (int) (default: 0)\n  -f, --fullscreen           Fullscreen (boolean) (default: false)\n  -m, --monitor <n>          Select a monitor (int) (default: null)\n  -n, --no_decoration        Remove window decoration (boolean) (default: false)\n  -s, --server <s>           Server URL (string) (default: "https://minim1.evl.uic.edu/#/home")\n  -x, --xorigin <n>          Window position x (int) (default: 226)\n  -y, --yorigin <n>          Window position y (int) (default: 38)\n  -c, --clear                Clear window preferences (default: false)\n  --allowDisplayingInsecure  Allow displaying of insecure content (http on https) (default: true)\n  --allowRunningInsecure     Allow running insecure content (scripts accessed on http vs https) (default:\n                             true)\n  --cache                    Clear the cache at startup (default: false)\n  --console                  Open the devtools console (default: false)\n  --debug                    Open the port debug protocol (port number is 9222 + clientID) (default:\n                             false)\n  --experimentalFeatures     Enable experimental features (default: false)\n  --height <n>               Window height (int) (default: 944)\n  --disable-hardware         Disable hardware acceleration (default: false)\n  --show-fps                 Display the Chrome FPS counter (default: false)\n  --profile <s>              Create a profile (string)\n  --width <n>                Window width (int) (default: 1061)\n  -h, --help                 display help for command\n'})}),"\n",(0,i.jsx)(n.h2,{id:"build",children:"Build"}),"\n",(0,i.jsxs)(n.p,{children:["You can generate binaries from Electron using the ",(0,i.jsx)(n.code,{children:"electron-packager"}),"package."]}),"\n",(0,i.jsx)(n.h3,{id:"mac",children:"Mac"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'npx electron-packager ./ --platform=darwin --arch=x64 --icon=s3.icns --overwrite --protocol=sage3 --protocol-name="SAGE3 application"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"windows",children:"Windows"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"npx electron-packager . --platform=win32 --arch=x64 --icon=s3.ico --overwrite\n"})}),"\n",(0,i.jsx)(n.h2,{id:"sign",children:"Sign"}),"\n",(0,i.jsxs)(n.p,{children:["To distribute binaries, they should be notarized and signed so they can be installed smoothly on users' machines.\nWe provide a series of ",(0,i.jsx)(n.code,{children:"build_*"})," scripts, that you can use starting points.\nYou will need a developer certificate for the operating system you want to target (macOS developer certificate, Windows developer certificate, ...)."]}),"\n",(0,i.jsx)(n.h3,{id:"mac-1",children:"Mac"}),"\n",(0,i.jsxs)(n.p,{children:["Using a combination of ",(0,i.jsx)(n.code,{children:"electron-packager"}),", ",(0,i.jsx)(n.code,{children:"electron-notarize"}),", ",(0,i.jsx)(n.code,{children:"electron-osx-sign"}),"  and ",(0,i.jsx)(n.code,{children:"electron-installer-dmg"})," we can build installable binaries (DMG file  containing a signed binary application). This is currently automated using GitHub actions on github.com."]}),"\n",(0,i.jsxs)(n.p,{children:["We use the ",(0,i.jsx)(n.code,{children:"update-electron-app"})," package to trigger an update check, download and restart.\nInternally, that uses the 'autoUpdater' API from Electron to check for an update."]}),"\n",(0,i.jsx)(n.h3,{id:"win",children:"Win"}),"\n",(0,i.jsxs)(n.p,{children:["Packages used: ",(0,i.jsx)(n.code,{children:"electron-packager"}),", ",(0,i.jsx)(n.code,{children:"electron-winstaller"})]}),"\n",(0,i.jsx)(n.p,{children:"TODO: signed binary steps (need help)"}),"\n",(0,i.jsx)(n.h2,{id:"deploy",children:"Deploy"}),"\n",(0,i.jsxs)(n.p,{children:["We trigger a new version of the binaries but committing sources in ",(0,i.jsx)(n.code,{children:"webstack/clients/electron"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Automatic updates (macOS only for now) are handled by creating a git tag in the ",(0,i.jsx)(n.code,{children:"dev"})," branch."]}),"\n",(0,i.jsx)(n.li,{children:"Edit the package.json to increase the version number"}),"\n",(0,i.jsx)(n.li,{children:"git tag 1.0.10"}),"\n",(0,i.jsx)(n.li,{children:"git push origin 1.0.10"}),"\n",(0,i.jsxs)(n.li,{children:["Find the new update in the github release page: ",(0,i.jsx)(n.a,{href:"https://github.com/SAGE-3/next/releases",children:"https://github.com/SAGE-3/next/releases"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>s});var i=t(7294);const l={},r=i.createContext(l);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);