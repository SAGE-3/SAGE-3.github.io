"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8259],{6232:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var i=t(5893),s=t(1151);const a={sidebar_position:7,toc_max_heading_level:5},r="Development Setup",o={id:"Development-setup",title:"Development Setup",description:"For new developers, here are the steps to get started with the development of SAGE3. This guide adresses development of the Nodejs backend server and the React frontend user interface.",source:"@site/docs/Development-setup.md",sourceDirName:".",slug:"/Development-setup",permalink:"/docs/Development-setup",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Development-setup.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,toc_max_heading_level:5},sidebar:"tutorialSidebar",previous:{title:"Architecture",permalink:"/docs/Architecture"},next:{title:"Application Development",permalink:"/docs/Application-Development"}},l={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Get the code",id:"get-the-code",level:2},{value:"Backend",id:"backend",level:2},{value:"Webstack",id:"webstack",level:2},{value:"Start the development environment",id:"start-the-development-environment",level:2},{value:"Start the backend services",id:"start-the-backend-services",level:3},{value:"Start the web server",id:"start-the-web-server",level:3},{value:"Start the React application",id:"start-the-react-application",level:3},{value:"Code Organization",id:"code-organization",level:2},{value:"Application Development",id:"application-development",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"development-setup",children:"Development Setup"})}),"\n",(0,i.jsx)(n.p,{children:"For new developers, here are the steps to get started with the development of SAGE3. This guide adresses development of the Nodejs backend server and the React frontend user interface."}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Node.js V20.xx, the current LTS version","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"We use 'Yarn' v1.xx as our package manager, so have it installed as well"}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"npm install --global yarn"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Docker with docker-compose enabled (most recent version have it already enabled)","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"you can install 'docker desktop' for windows and mac"}),"\n",(0,i.jsx)(n.li,{children:"for linux, you can install docker packages from your package manager"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"A code editor of your choice, but VSCode would be recommended if you don't have a preference"}),"\n",(0,i.jsx)(n.li,{children:"Terminal knowledge"}),"\n",(0,i.jsx)(n.li,{children:"WSL2 (Windows Subsystem for Linux) if you are on Windows"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"You will need three Terminal windows open on your desktop or within your code editor."}),"\n",(0,i.jsx)(n.h2,{id:"get-the-code",children:"Get the code"}),"\n",(0,i.jsx)(n.p,{children:"The development occurs in the 'dev' branch of the repository. The main branch is for production code only."}),"\n",(0,i.jsx)(n.p,{children:"In a terminal window, clone the repository and checkout the 'dev' branch:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/SAGE-3/next\ncd next\ngit checkout dev\ngit pull origin dev\n"})}),"\n",(0,i.jsx)(n.h2,{id:"backend",children:"Backend"}),"\n",(0,i.jsx)(n.p,{children:"We run the 'backend' services in docker containers: this includes the REDIS server, the Fluentd logging server, and the jupyter server. Make sure you have docker installed and running on your machine."}),"\n",(0,i.jsx)(n.p,{children:"In a terminal window, navigate to the 'deployment' directory and run the following commands:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker compose -f docker-compose-backend.yml pull\n"})}),"\n",(0,i.jsx)(n.p,{children:"This will download the docker images. It will take a while to download the images the first time you run this command. You will need around 10GB free to store the docker images."}),"\n",(0,i.jsx)(n.h2,{id:"webstack",children:"Webstack"}),"\n",(0,i.jsx)(n.p,{children:"The webstack is a React application that runs in a custom Nodejs server called. The webstack is a React application that runs in a custom Nodejs server called 'sage3-server'. The server is an Express server that serves the React application and manages the collaboration using the backend services (redis, jupyter, ...)."}),"\n",(0,i.jsx)(n.p,{children:"In another terminal window, navigate to the 'webstack' directory and run the following commands to setup the dependencies for TypeScript and React: It will require around 1.5GB of space to store the node_modules."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"yarn install\n"})}),"\n",(0,i.jsx)(n.p,{children:"The first time that you setup a new development environment, you will need to stage some files and generate some keys. Run the following command to stage the files:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"yarn stage\n"})}),"\n",(0,i.jsx)(n.p,{children:"To generate the JSON Web Token (JWT) keys, run the following command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd webstack/keys\n./genJWT_keys.sh  # this will generate the key to sign the JWT tokens\n./genJWT_token.sh # this will generate a JWT token for development\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The file ",(0,i.jsx)(n.code,{children:"token.json"})," will be generated in the 'webstack/keys' directory. This token is used to authenticate the user in the development environment. Open the file and copy the token value (long string, around 5 lines) and paste it in the 'next/deployment/.env' file as the value for the ",(0,i.jsx)(n.code,{children:"TOKEN"})," variable."]}),"\n",(0,i.jsx)(n.h2,{id:"start-the-development-environment",children:"Start the development environment"}),"\n",(0,i.jsx)(n.h3,{id:"start-the-backend-services",children:"Start the backend services"}),"\n",(0,i.jsx)(n.p,{children:"You will need 3 terminal windows open to start the development environment. In the first terminal window, start the backend services:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd next/deployment\ndocker compose -f docker-compose-backend.yml up\n"})}),"\n",(0,i.jsx)(n.p,{children:"There is a utility script to start and to stop the backend services: './Backend' in the 'deployment' directory."}),"\n",(0,i.jsx)(n.h3,{id:"start-the-web-server",children:"Start the web server"}),"\n",(0,i.jsx)(n.p,{children:"In the second terminal window, start the Node.js server:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd next/webstack\nyarn start\n"})}),"\n",(0,i.jsx)(n.p,{children:"It will start the server on the port 3333. It will take a minute to compile the Typescript code. The server will restart automatically when you change the server code or any of its librariees (SAGE3 apps are built into one library)."}),"\n",(0,i.jsx)(n.h3,{id:"start-the-react-application",children:"Start the React application"}),"\n",(0,i.jsx)(n.p,{children:"In the third terminal window, start the React application:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd next/webstack\nyarn webapp\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This will start the React application on the port 4200. The React development server will proxy automatically all the request to the Node.js server on port 3333. It takes a minute to compile the React and Typescript code. You can access the application at ",(0,i.jsx)(n.code,{children:"http://localhost:4200"}),". The React server will automatically reload the page when you change the code."]}),"\n",(0,i.jsx)(n.p,{children:"To stop the development environment, you can type 'Ctrl-C' in each terminal window."}),"\n",(0,i.jsx)(n.h2,{id:"code-organization",children:"Code Organization"}),"\n",(0,i.jsx)(n.p,{children:"The code is organized in the following directories:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["'webstack' contains the React application and Nodejs server into a monorepo","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["the subfolder ",(0,i.jsx)(n.code,{children:"apps"})," contains the nodejs server code ",(0,i.jsx)(n.code,{children:"homebase"})," and the React application code ",(0,i.jsx)(n.code,{children:"webapp"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Libraries are stored in the 'libs' directory","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"'libs' contains the SAGE3 libraries that are used by the 'homebase' server and the 'webapp' application"}),"\n",(0,i.jsx)(n.li,{children:"Shared types and functions using by both apps are stored in the 'libs/shared' directory"}),"\n",(0,i.jsx)(n.li,{children:"The 'libs/applications' directory contains the SAGE3 applications"}),"\n",(0,i.jsx)(n.li,{children:"'libs/backend' contains the backend services that are used by the 'homebase' server"}),"\n",(0,i.jsx)(n.li,{children:"'libs/frontend' contains the frontend services that are used by the 'webapp' application"}),"\n",(0,i.jsx)(n.li,{children:"'libs/sagebase' contains the 'SAGEBase' module that defines distributed collections defined over Redis. The collections have HTTP and WebSocket interfaces to access the data."}),"\n",(0,i.jsx)(n.li,{children:"A few extras modules"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"application-development",children:"Application Development"}),"\n",(0,i.jsx)(n.p,{children:"To develop a SAGE3 application, you need to use the scalfolding tool that we provide. It creates template files for your applications and adds it to the SAGE3 environment."}),"\n",(0,i.jsx)(n.p,{children:"To create a new application, run the following command in the 'webstack' directory and answer the questions:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"yarn newapp\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Your application will reside in the folder ",(0,i.jsx)(n.code,{children:"webstack/libs/applications/src/lib/apps"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The 'index.ts' file contains the schema for the shared state of your application. It is defined using the 'zod' type module."}),"\n",(0,i.jsx)(n.li,{children:"'styling.css' is file where you can store CSS styles for your application."}),"\n",(0,i.jsx)(n.li,{children:"'[AppName].tsx' is the main file for your application. It exports two React components: the application window and the toolbar (a grouped toolbar can also be defined for group functions)."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"More information in the 'Application-Development' page."}),"\n",(0,i.jsxs)(n.p,{children:["If you ever need to reset the SAGE3 application list, run the command ",(0,i.jsx)(n.code,{children:"yarn regen"})," in the 'webstack' directory."]})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>r});var i=t(7294);const s={},a=i.createContext(s);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);